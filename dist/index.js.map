{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 可以传入 deep 对比函数\n */\ntype CompareFun<T> = (prev: T, next: T) => boolean;\n\nfunction simpleCompare<T>(prev: T, next: T) {\n  return JSON.stringify(prev) === JSON.stringify(next)\n}\n\ninterface SnapshotHistoryConfig<T> {\n  /** 比对函数，目前只提供简单的函数 */\n  compareFun: CompareFun<T>;\n  /** 最大快照数量 */\n  maxSnapshots: number;\n  /** 添加 WeakMap 以便于生成唯一的 id */\n  withKey: boolean;\n  /** 使用 本地存储 */\n  storage: 'localStorage' | 'sessionStorage' | 'indexDB';\n}\n\nclass SnapshotHistory<T> {\n  private gcNumber = 1;\n\n  readonly maxSnapshots: number\n  readonly compareFun: CompareFun<T>\n  private snapshots: T[] = []\n  private cursor: number = -1\n  private gc: WeakMap<Object, number> = new WeakMap<Object, number>()\n\n  constructor(config: SnapshotHistoryConfig<T>) {\n    const {\n      maxSnapshots = 20,\n      compareFun = simpleCompare,\n      withKey = true\n    } = config\n    this.maxSnapshots = maxSnapshots\n    this.compareFun = compareFun\n\n    if (withKey) {\n\n    }\n  }\n\n\n  keyBy(snapshot: T):\n    number | undefined {\n    return this.gc.get(snapshot)\n  }\n\n  get canUndo(): boolean {\n    return this.cursor > 0\n  }\n\n  get canClear(): boolean {\n    return this.snapshots.length > 0\n  }\n\n  get canRedo() {\n    return this.snapshots.length > this.cursor + 1\n  }\n\n  record(snapshot: T) {\n    if (this.checkRepeat(snapshot)) {\n      return false\n    }\n\n    while (this.cursor < this.snapshots.length - 1) {\n      const old: T = this.snapshots.pop() as T\n      this.gc.delete(old)\n    }\n\n    // 生成唯一的 id，确保在列表渲染时不会重用 DOM\n    this.gc.set(snapshot, this.gcNumber++)\n\n    this.snapshots.push(snapshot)\n\n    // 确保历史记录条数限制\n    if (this.snapshots.length > this.maxSnapshots) {\n      const oldSnapshot: T = this.snapshots.shift() as T\n      this.gc.delete(oldSnapshot)\n    }\n    this.cursor = this.snapshots.length - 1\n  }\n\n  undo() {\n    if (this.canUndo) {\n      this.cursor -= 1\n      return this.snapshots[this.cursor]\n    }\n    return null\n  }\n\n  redo() {\n    if (this.canRedo) {\n      this.cursor += 1\n      return this.snapshots[this.cursor]\n    }\n    return null\n  }\n\n  move(cursor: number) {\n    if (this.snapshots.length > cursor) {\n      this.cursor = cursor\n      return this.snapshots[this.cursor]\n    }\n  }\n\n  clear() {\n    if (!this.canClear) {\n      return\n    }\n    this.cursor = -1\n    this.snapshots = []\n    this.gc = new WeakMap<Object, number>()\n  }\n\n  checkRepeat(snapshot: T) {\n    const next = snapshot\n    const prev = this.cursor >= 0 ? this.snapshots[this.cursor] : {}\n    // 如果更复杂的对象建议使用 deep equal 库\n    return this.compareFun(prev as T, next)\n  }\n}\n\nexport default SnapshotHistory;\n"]}